{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","console","log","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","id","horaSeleccionada","onclick","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noResultados","mostrarPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\n    const horas = document.querySelector('#horas');\n\n    if(horas){\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\n        const dias = document.querySelectorAll('[name=\"dia\"]');\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\n\n        categoria.addEventListener('change', terminoBusqueda);\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\n\n        let busqueda = {\n            categoria_id : +categoria.value || '',\n            dia: +inputHiddenDia.value || ''\n        }\n\n        if(!Object.values(busqueda).includes('')){\n\n            (async () => {\n                await buscarEventos();\n\n                // Resaltar la hora actual\n                const id = inputHiddenHora.value;\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`);\n                horaSeleccionada.classList.remove('horas__hora--deshabilitada');\n                horaSeleccionada.classList.add('horas__hora--seleccionada');\n                horaSeleccionada.onclick = seleccionarHora;\n            })()\n            \n        }\n\n        function terminoBusqueda(e){\n            busqueda[e.target.name] = e.target.value;\n\n            // Reiniciar los campos ocultos y el selector de horas \n            inputHiddenHora.value = '';\n            inputHiddenDia.value = '';\n\n            // Deshabilitar la hora previa si hay un nuevo click\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\n            if(horaPrevia){\n                horaPrevia.classList.remove('horas__hora--seleccionada');\n            }\n\n            if(Object.values(busqueda).includes('')){\n                return;\n            }\n\n            buscarEventos();\n        }\n\n        async function buscarEventos() {\n            const {dia, categoria_id} = busqueda;\n            const url = `/api/eventos-horarios?dia_id=${dia}&categoria_id=${categoria_id}`;\n            const resultado = await fetch(url);\n            const eventos = await resultado.json();\n\n            obtenerHorasDisponibles(eventos);\n        }\n\n        function obtenerHorasDisponibles(eventos) {\n\n            // Reiniciar las horas\n            const listadoHoras = document.querySelectorAll('#horas li');\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\n\n            // Comprobar eventos ya tomados y quitar la clase deshabilitado\n            const horasTomadas = eventos.map(evento => evento.hora_id);\n            console.log(horasTomadas);\n            \n            const listadoHorasArray = Array.from(listadoHoras);\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\n\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitada'));\n            \n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\n            horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\n        }\n\n        function seleccionarHora(e) {\n\n            // Deshabilitar la hora previa si hay un nuevo click\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\n            if(horaPrevia){\n                horaPrevia.classList.remove('horas__hora--seleccionada');\n            }\n\n            // Agregar clase de seleccionado\n            e.target.classList.add('horas__hora--seleccionada');\n\n            inputHiddenHora.value = e.target.dataset.horaId;\n            console.log(e.target.dataset.horaId);\n\n            // Llenar el campo oculto dia\n            inputHiddenDia.value = document.querySelector('[name=dia]:checked').value;\n        }\n    }\n})();","(function() {\n    const ponentesInput = document.querySelector('#ponentes');\n\n    if(ponentesInput){\n\n        let ponentes = [];\n        let ponentesFiltrados = [];\n\n        const listadoPonentes = document.querySelector('#listado-ponentes');\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\n\n        obtenerPonentes();\n\n        ponentesInput.addEventListener('input', buscarPonentes);\n\n        async function obtenerPonentes() {\n            \n            const url = `/api/ponentes`;\n            const respuesta = await fetch(url);\n            const resultado = await respuesta.json();\n\n            formatearPonentes(resultado);\n        }\n\n        function formatearPonentes(arrayPonentes = []) {\n\n            ponentes = arrayPonentes.map(ponente => {\n                return {\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\n                    id: ponente.id\n                }\n            })\n        }\n\n        function buscarPonentes(e) {\n            \n            const busqueda = e.target.value;\n\n            if(busqueda.length > 3){\n                // Expresion regular\n                // Sirve para buscar sin importar mayusculas o minusculas\n                const expresion = new RegExp(busqueda, \"i\");\n\n                ponentesFiltrados = ponentes.filter(ponente => {\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1){\n                        return ponente;\n                    }\n                });\n            }else {\n                ponentesFiltrados = [];\n            }\n            mostrarPonentes();\n        }\n\n        function mostrarPonentes() {\n\n            while(listadoPonentes.firstChild){\n                listadoPonentes.removeChild(listadoPonentes.firstChild);\n            }\n\n            if(ponentesFiltrados.length > 0){\n\n                ponentesFiltrados.forEach(ponente => {\n                    const ponenteHTML = document.createElement('LI');\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\n                    ponenteHTML.textContent = ponente.nombre;\n                    ponenteHTML.dataset.ponenteId = ponente.id;\n                    ponenteHTML.onclick = seleccionarPonente;\n    \n                    // Añadir al DOM\n                    listadoPonentes.appendChild(ponenteHTML);\n                });\n            }else {\n                const noResultados = document.createElement('P');\n                noResultados.classList.add('listado-ponentes__no-resultado');\n                noResultados.textContent = 'No hay resultados para tu búsqueda';\n                listadoPonentes.appendChild(noResultados);\n            }\n        }\n\n        function seleccionarPonente(e) {\n            const ponente = e.target;\n\n            // Remover la clase previa \n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\n\n            if(ponentePrevio){\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\n            }\n\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\n\n            ponenteHidden.value = ponente.dataset.ponenteId;\n        }\n    }\n\n})();","(function() {\n    const tagsInput = document.querySelector('#tags_input');\n\n    if(tagsInput){\n\n        const tagsDiv = document.querySelector('#tags');\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\n        let tags = [];\n\n        // Recuperar el input oculto\n        if(tagsInputHidden.value !== ''){\n            tags = tagsInputHidden.value.split(',');\n            mostrarTags();\n        }\n\n        // Escuchar los cambios en el input \n        tagsInput.addEventListener('keypress', guardarTag);\n\n        function guardarTag(e) {\n            if(e.keyCode === 44){\n\n                if(e.target.value.trim() === '' || e.target.value < 1){\n                    return\n                }\n\n                e.preventDefault(); //Evita que se ecriba la coma\n                tags = [...tags, e.target.value.trim()];\n                tagsInput.value = '';\n                mostrarTags();\n            }\n        }\n\n        function mostrarTags() {\n            tagsDiv.textContent = '';\n            tags.forEach(tag => {\n                const etiqueta = document.createElement('LI');\n                etiqueta.classList.add('formulario__tag');\n                etiqueta.textContent = tag;\n                etiqueta.ondblclick = eliminarTag;\n                tagsDiv.appendChild(etiqueta);\n            })\n\n            actualizarInputHidden();\n        }\n\n        function eliminarTag(e) {\n            e.target.remove();\n            tags = tags.filter(tag => tag !== e.target.textContent);\n            actualizarInputHidden();\n        }\n\n        function actualizarInputHidden() {\n            tagsInputHidden.value = tags.toString();\n        }\n\n    }\n\n})()"]}