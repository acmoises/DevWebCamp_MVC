{"version":3,"sources":["horas.js","tags.js"],"names":["horas","document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenHora","terminoBusqueda","e","target","name","value","Object","values","includes","async","url","resultado","fetch","eventos","horasTomadas","map","evento","hora_id","filter","li","dataset","horaId","forEach","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","horaPrevia","classList","remove","add","console","log","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","tag","etiqueta","createElement","ondblclick","eliminarTag","appendChild","actualizarInputHidden","toString","split","keyCode","trim","preventDefault"],"mappings":"CAAA,WACA,MAAAA,EAAAC,SAAAC,cAAA,UAEA,IAAAC,EAAA,CACAC,aAAA,GACAC,IAAA,IAGA,GAAAL,EAAA,CACA,MAAAM,EAAAL,SAAAC,cAAA,yBACAK,EAAAN,SAAAO,iBAAA,gBAEAC,GADAR,SAAAC,cAAA,mBACAD,SAAAC,cAAA,qBAKA,SAAAQ,EAAAC,GACAR,EAAAQ,EAAAC,OAAAC,MAAAF,EAAAC,OAAAE,MAEAC,OAAAC,OAAAb,GAAAc,SAAA,KAOAC,iBACA,MAAAb,IAAAA,EAAAD,aAAAA,GAAAD,EACAgB,EAAA,gCAAAd,kBAAAD,IACAgB,QAAAC,MAAAF,IAMA,SAAAG,GAGA,MAAAC,EAAAD,EAAAE,IAAAC,GAAAA,EAAAC,SACAzB,SAAAO,iBAAA,aACAmB,OAAAC,GAAAL,EAAAN,SAAAW,EAAAC,QAAAC,SAEA7B,SAAAO,iBAAA,aACAuB,QAAAC,GAAAA,EAAAC,iBAAA,QAAAC,IAXAC,OAFAf,EAAAgB,QAPAC,GAuBA,SAAAH,EAAAvB,GAGA,MAAA2B,EAAArC,SAAAC,cAAA,8BACAoC,GACAA,EAAAC,UAAAC,OAAA,6BAIA7B,EAAAC,OAAA2B,UAAAE,IAAA,6BAEAhC,EAAAK,MAAAH,EAAAC,OAAAiB,QAAAC,OACAY,QAAAC,IAAAhC,EAAAC,OAAAiB,QAAAC,QA7CAxB,EAAA2B,iBAAA,SAAAvB,GACAH,EAAAwB,QAAA1B,GAAAA,EAAA4B,iBAAA,SAAAvB,KAfA,GCAA,WACA,MAAAkC,EAAA3C,SAAAC,cAAA,eAEA,GAAA0C,EAAA,CAEA,MAAAC,EAAA5C,SAAAC,cAAA,SACA4C,EAAA7C,SAAAC,cAAA,iBACA,IAAA6C,EAAA,GAyBA,SAAAC,IACAH,EAAAI,YAAA,GACAF,EAAAhB,QAAAmB,IACA,MAAAC,EAAAlD,SAAAmD,cAAA,MACAD,EAAAZ,UAAAE,IAAA,mBACAU,EAAAF,YAAAC,EACAC,EAAAE,WAAAC,EACAT,EAAAU,YAAAJ,KAGAK,IAGA,SAAAF,EAAA3C,GACAA,EAAAC,OAAA4B,SACAO,EAAAA,EAAApB,OAAAuB,GAAAA,IAAAvC,EAAAC,OAAAqC,aACAO,IAGA,SAAAA,IACAV,EAAAhC,MAAAiC,EAAAU,WA1CA,KAAAX,EAAAhC,QACAiC,EAAAD,EAAAhC,MAAA4C,MAAA,KACAV,KAIAJ,EAAAX,iBAAA,YAEA,SAAAtB,GACA,GAAA,KAAAA,EAAAgD,QAAA,CAEA,GAAA,KAAAhD,EAAAC,OAAAE,MAAA8C,QAAAjD,EAAAC,OAAAE,MAAA,EACA,OAGAH,EAAAkD,iBACAd,EAAA,IAAAA,EAAApC,EAAAC,OAAAE,MAAA8C,QACAhB,EAAA9B,MAAA,GACAkC,SA5BA","file":"bundle.js","sourcesContent":["(function(){\n    const horas = document.querySelector('#horas');\n\n    let busqueda = {\n        categoria_id : '',\n        dia: ''\n    }\n\n    if(horas){\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\n        const dias = document.querySelectorAll('[name=\"dia\"]');\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\n\n        categoria.addEventListener('change', terminoBusqueda);\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\n\n        function terminoBusqueda(e){\n            busqueda[e.target.name] = e.target.value;\n\n            if(Object.values(busqueda).includes('')){\n                return;\n            }\n\n            buscarEventos();\n        }\n\n        async function buscarEventos() {\n            const {dia, categoria_id} = busqueda;\n            const url = `/api/eventos-horarios?dia_id=${dia}&categoria_id=${categoria_id}`;\n            const resultado = await fetch(url);\n            const eventos = await resultado.json();\n\n            obtenerHorasDisponibles(eventos);\n        }\n\n        function obtenerHorasDisponibles(eventos) {\n\n            // Comprobar eventos ya tomados y quitar la clase deshabilitado\n            const horasTomadas = eventos.map(evento => evento.hora_id);\n            const listadoHoras = document.querySelectorAll('#horas li');\n            const resultado = listadoHoras.filter(li => horasTomadas.includes(li.dataset.horaId));\n            \n            const horasDisponibles = document.querySelectorAll('#horas li');\n            horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\n        }\n\n        function seleccionarHora(e) {\n\n            // Deshabilitar la hora previa si hay un nuevo click\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\n            if(horaPrevia){\n                horaPrevia.classList.remove('horas__hora--seleccionada');\n            }\n\n            // Agregar clase de seleccionado\n            e.target.classList.add('horas__hora--seleccionada');\n\n            inputHiddenHora.value = e.target.dataset.horaId;\n            console.log(e.target.dataset.horaId);\n        }\n    }\n})();","(function() {\n    const tagsInput = document.querySelector('#tags_input');\n\n    if(tagsInput){\n\n        const tagsDiv = document.querySelector('#tags');\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\n        let tags = [];\n\n        // Recuperar el input oculto\n        if(tagsInputHidden.value !== ''){\n            tags = tagsInputHidden.value.split(',');\n            mostrarTags();\n        }\n\n        // Escuchar los cambios en el input \n        tagsInput.addEventListener('keypress', guardarTag);\n\n        function guardarTag(e) {\n            if(e.keyCode === 44){\n\n                if(e.target.value.trim() === '' || e.target.value < 1){\n                    return\n                }\n\n                e.preventDefault(); //Evita que se ecriba la coma\n                tags = [...tags, e.target.value.trim()];\n                tagsInput.value = '';\n                mostrarTags();\n            }\n        }\n\n        function mostrarTags() {\n            tagsDiv.textContent = '';\n            tags.forEach(tag => {\n                const etiqueta = document.createElement('LI');\n                etiqueta.classList.add('formulario__tag');\n                etiqueta.textContent = tag;\n                etiqueta.ondblclick = eliminarTag;\n                tagsDiv.appendChild(etiqueta);\n            })\n\n            actualizarInputHidden();\n        }\n\n        function eliminarTag(e) {\n            e.target.remove();\n            tags = tags.filter(tag => tag !== e.target.textContent);\n            actualizarInputHidden();\n        }\n\n        function actualizarInputHidden() {\n            tagsInputHidden.value = tags.toString();\n        }\n\n    }\n\n})()"]}